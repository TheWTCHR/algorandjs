{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/utils/functions/index.ts"],"names":[],"mappings":";;;AAKO,KAAK,UAAU,cAAc,CAAC,OAAe,EAAE,OAAe;IACjE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,OAAO,gBAAgB,OAAO,EAAE,EAAE;QAClE,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;SACrC;QACD,MAAM,EAAE,KAAK;KAChB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IAElD,OAAO,IAAmB,CAAC;AAC/B,CAAC;AATD,wCASC;AAAA,CAAC;AAEK,KAAK,UAAU,gBAAgB,CAAC,OAAe,EAAE,OAAe;IACnE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,OAAO,cAAc,OAAO,WAAW,EAAE;QACzE,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;SACrC;QACD,MAAM,EAAE,KAAK;KAChB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IAElD,OAAO,IAAqB,CAAC;AACjC,CAAC;AATD,4CASC;AAAA,CAAC;AAEK,KAAK,UAAU,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,OAAe;IACtF,IAAI,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,OAAO,cAAc,OAAO,WAAW,EAAE;QACvE,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;SACrC;QACD,MAAM,EAAE,KAAK;KAChB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IAElD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAuB,EAAE,EAAE;QAC9C,QAAO,OAAO,CAAC,OAAO,EAAE;YACpB,KAAK,OAAO,CAAC,CAAC;gBACV,IAAI,GAAG,OAAO,CAAC;gBACf,MAAM;aACT;SACJ;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,IAAsB,CAAC;AAClC,CAAC;AAlBD,gDAkBC;AAAA,CAAC","sourcesContent":["import type { AddressInfo } from '../../types/AddressInfo';\r\nimport type { AssetBalances } from '../../types/Balances';\r\nimport type { AddressBalance } from '../../types/Balances';\r\n\r\n\r\nexport async function getAddressInfo(baseurl: string, address: string): Promise<AddressInfo> {\r\n    const data = await fetch(`https://${baseurl}/v2/accounts/${address}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        method: 'GET',\r\n    }).then((res) => res.json()).then((data) => data);\r\n    \r\n    return data as AddressInfo;\r\n};\r\n\r\nexport async function getAssetBalances(baseurl: string, assetid: number): Promise<AssetBalances> {\r\n    const data = await fetch(`https://${baseurl}/v2/assets/${assetid}/balances`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        method: 'GET',\r\n    }).then((res) => res.json()).then((data) => data);\r\n\r\n    return data as AssetBalances;\r\n};\r\n\r\nexport async function getAddressBalances(baseurl: string, address: string, assetid: number): Promise<AddressBalance> {\r\n    let data = await fetch(`https://${baseurl}/v2/assets/${assetid}/balances`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        method: 'GET',\r\n    }).then((res) => res.json()).then((data) => data);\r\n\r\n    data.balances.forEach((balance: AddressBalance) => {\r\n        switch(balance.address) {\r\n            case address: {\r\n                data = balance;\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    return data as AddressBalance;\r\n};"]}